{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport default function useToken() {\n  _s();\n  function getToken() {\n    const tokenString = localStorage.getItem('token-info');\n    const userToken = JSON.parse(tokenString);\n    return userToken === null || userToken === void 0 ? void 0 : userToken.token;\n  }\n  ;\n  const [token, setToken] = useState(getToken());\n  function saveToken(userToken) {\n    localStorage.setItem('token-info', JSON.stringify(userToken));\n    setToken(userToken.token);\n  }\n  ;\n  return {\n    setToken: saveToken,\n    token\n  };\n}\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"names":["useState","useToken","_s","getToken","tokenString","localStorage","getItem","userToken","JSON","parse","token","setToken","saveToken","setItem","stringify"],"sources":["C:/Users/marco/OneDrive/Documentos/topduo/Projeto-Integrador-2024.1/frontend/src/components/useToken.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n  function getToken(){\r\n    const tokenString = localStorage.getItem('token-info');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.token\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  function saveToken(userToken) {\r\n    localStorage.setItem('token-info', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token\r\n  }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,SAASC,QAAQA,CAAA,EAAE;IACjB,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACtD,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,CAAC;IACzC,OAAOG,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,KAAK;EACzB;EAAC;EAED,MAAM,CAACA,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC;EAE9C,SAASS,SAASA,CAACL,SAAS,EAAE;IAC5BF,YAAY,CAACQ,OAAO,CAAC,YAAY,EAAEL,IAAI,CAACM,SAAS,CAACP,SAAS,CAAC,CAAC;IAC7DI,QAAQ,CAACJ,SAAS,CAACG,KAAK,CAAC;EAC3B;EAAC;EAED,OAAO;IACLC,QAAQ,EAAEC,SAAS;IACnBF;EACF,CAAC;AACH;AAACR,EAAA,CAlBuBD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}