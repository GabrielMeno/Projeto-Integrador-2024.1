{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marco\\\\OneDrive\\\\Documentos\\\\topduo\\\\Projeto-Integrador-2024.1\\\\frontend\\\\src\\\\components\\\\SelectBox\\\\index.jsx\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    border: '2px solid #4B0082',\n    borderRadius: '16px',\n    padding: '2px',\n    minHeight: '40px'\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    color: state.isSelected ? 'white' : '#4B0082',\n    backgroundColor: state.isSelected ? '#4B0082' : 'white'\n  }),\n  placeholder: provided => ({\n    ...provided,\n    color: '#4B0082'\n  }),\n  singleValue: provided => ({\n    ...provided,\n    color: '#4B0082'\n  })\n};\nconst SelectBox = ({\n  className,\n  name,\n  options,\n  value,\n  onChange\n}) => {\n  const handleChange = selectedOption => {\n    onChange({\n      target: {\n        name,\n        value: selectedOption ? selectedOption.value : ''\n      }\n    });\n  };\n  const selectedValue = options.find(option => option.value === value) || null;\n  return /*#__PURE__*/_jsxDEV(Select, {\n    className: className,\n    styles: customStyles,\n    name: name,\n    value: selectedValue,\n    onChange: handleChange,\n    options: options,\n    placeholder: \"Selecione...\",\n    isClearable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = SelectBox;\nSelectBox.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  value: PropTypes.string,\n  // Certifique-se de que `value` é uma string\n  onChange: PropTypes.func.isRequired\n};\nexport { SelectBox };\nvar _c;\n$RefreshReg$(_c, \"SelectBox\");","map":{"version":3,"names":["React","Select","PropTypes","jsxDEV","_jsxDEV","customStyles","control","provided","border","borderRadius","padding","minHeight","option","state","color","isSelected","backgroundColor","placeholder","singleValue","SelectBox","className","name","options","value","onChange","handleChange","selectedOption","target","selectedValue","find","styles","isClearable","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","arrayOf","shape","label","func","$RefreshReg$"],"sources":["C:/Users/marco/OneDrive/Documentos/topduo/Projeto-Integrador-2024.1/frontend/src/components/SelectBox/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst customStyles = {\r\n  control: (provided) => ({\r\n    ...provided,\r\n    border: '2px solid #4B0082',\r\n    borderRadius: '16px',\r\n    padding: '2px',\r\n    minHeight: '40px',\r\n  }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    color: state.isSelected ? 'white' : '#4B0082',\r\n    backgroundColor: state.isSelected ? '#4B0082' : 'white',\r\n  }),\r\n  placeholder: (provided) => ({\r\n    ...provided,\r\n    color: '#4B0082',\r\n  }),\r\n  singleValue: (provided) => ({\r\n    ...provided,\r\n    color: '#4B0082',\r\n  }),\r\n};\r\n\r\nconst SelectBox = ({ className, name, options, value, onChange }) => {\r\n  const handleChange = (selectedOption) => {\r\n    onChange({\r\n      target: {\r\n        name,\r\n        value: selectedOption ? selectedOption.value : '',\r\n      }\r\n    });\r\n  };\r\n\r\n  const selectedValue = options.find(option => option.value === value) || null;\r\n\r\n  return (\r\n    <Select\r\n      className={className}\r\n      styles={customStyles}\r\n      name={name}\r\n      value={selectedValue}\r\n      onChange={handleChange}\r\n      options={options}\r\n      placeholder=\"Selecione...\"\r\n      isClearable\r\n    />\r\n  );\r\n};\r\n\r\nSelectBox.propTypes = {\r\n  className: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  value: PropTypes.string, // Certifique-se de que `value` é uma string\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { SelectBox };\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAGC,QAAQ,KAAM;IACtB,GAAGA,QAAQ;IACXC,MAAM,EAAE,mBAAmB;IAC3BC,YAAY,EAAE,MAAM;IACpBC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE;EACb,CAAC,CAAC;EACFC,MAAM,EAAEA,CAACL,QAAQ,EAAEM,KAAK,MAAM;IAC5B,GAAGN,QAAQ;IACXO,KAAK,EAAED,KAAK,CAACE,UAAU,GAAG,OAAO,GAAG,SAAS;IAC7CC,eAAe,EAAEH,KAAK,CAACE,UAAU,GAAG,SAAS,GAAG;EAClD,CAAC,CAAC;EACFE,WAAW,EAAGV,QAAQ,KAAM;IAC1B,GAAGA,QAAQ;IACXO,KAAK,EAAE;EACT,CAAC,CAAC;EACFI,WAAW,EAAGX,QAAQ,KAAM;IAC1B,GAAGA,QAAQ;IACXO,KAAK,EAAE;EACT,CAAC;AACH,CAAC;AAED,MAAMK,SAAS,GAAGA,CAAC;EAAEC,SAAS;EAAEC,IAAI;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACnE,MAAMC,YAAY,GAAIC,cAAc,IAAK;IACvCF,QAAQ,CAAC;MACPG,MAAM,EAAE;QACNN,IAAI;QACJE,KAAK,EAAEG,cAAc,GAAGA,cAAc,CAACH,KAAK,GAAG;MACjD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,aAAa,GAAGN,OAAO,CAACO,IAAI,CAACjB,MAAM,IAAIA,MAAM,CAACW,KAAK,KAAKA,KAAK,CAAC,IAAI,IAAI;EAE5E,oBACEnB,OAAA,CAACH,MAAM;IACLmB,SAAS,EAAEA,SAAU;IACrBU,MAAM,EAAEzB,YAAa;IACrBgB,IAAI,EAAEA,IAAK;IACXE,KAAK,EAAEK,aAAc;IACrBJ,QAAQ,EAAEC,YAAa;IACvBH,OAAO,EAAEA,OAAQ;IACjBL,WAAW,EAAC,cAAc;IAC1Bc,WAAW;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEN,CAAC;AAACC,EAAA,GAxBIjB,SAAS;AA0BfA,SAAS,CAACkB,SAAS,GAAG;EACpBjB,SAAS,EAAElB,SAAS,CAACoC,MAAM;EAC3BjB,IAAI,EAAEnB,SAAS,CAACoC,MAAM,CAACC,UAAU;EACjCjB,OAAO,EAAEpB,SAAS,CAACsC,OAAO,CACxBtC,SAAS,CAACuC,KAAK,CAAC;IACdC,KAAK,EAAExC,SAAS,CAACoC,MAAM,CAACC,UAAU;IAClChB,KAAK,EAAErB,SAAS,CAACoC,MAAM,CAACC;EAC1B,CAAC,CACH,CAAC,CAACA,UAAU;EACZhB,KAAK,EAAErB,SAAS,CAACoC,MAAM;EAAE;EACzBd,QAAQ,EAAEtB,SAAS,CAACyC,IAAI,CAACJ;AAC3B,CAAC;AAED,SAASpB,SAAS;AAAG,IAAAiB,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}